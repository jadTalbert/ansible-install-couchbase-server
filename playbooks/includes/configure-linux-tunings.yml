# this is an include file and is referenced from a wrapping play outside of this directory
#configure linux tunings
---
      - name: Get the current Linux keep-alive value
        shell: "cat /proc/sys/net/ipv4/tcp_keepalive_time"
        register: catoutput
      - debug: msg={{catoutput.stdout_lines[0]}}

      - name: Set new keep-alive value
        shell: echo 30 > /proc/sys/net/ipv4/tcp_keepalive_time

      - name: Get the new keep-alive value
        shell: "cat /proc/sys/net/ipv4/tcp_keepalive_time"
        register: newcatoutput
      - debug: msg={{newcatoutput.stdout_lines[0]}}  

      - name: Set the keep-alive probes
        shell: echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes
     
      - name: Set reuse of TIME-WAIT sockets 
        shell: echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse

      - name: Increase the tcp-time-wait buckets pool size to prevent DDoS attacks
        shell: echo 1440000 > /proc/sys/net/ipv4/tcp_max_tw_buckets
          
      - name: Configure vm.swappiness so that kernal only swaps as a last resort
        shell: echo "{{couchbase_cluster.kernel_tuning.vm_swappiness}}" > /proc/sys/vm/swappiness

      - name: Configure vm.swappines to survive a reboot operation(part 1)
        shell: echo "" >> /etc/sysctl.conf
      - name: Configure vm.swappines to survive a reboot operation(part 2)
        shell: echo "#Set swappiness to {{couchbase_cluster.kernel_tuning.vm_swappiness}} to avoid swapping" >> /etc/sysctl.conf
      - name: Configure vm.swappines to survive a reboot operation(part 3)
        shell: echo "vm.swappiness = {{couchbase_cluster.kernel_tuning.vm_swappiness}}" >> /etc/sysctl.conf

      - name: Set the keep-alive interval
        shell: echo 15 > /proc/sys/net/ipv4/tcp_keepalive_intvl

      - name: Set number of reserved free pages in proportion to their size
        shell: echo 524288 > /proc/sys/vm/min_free_kbytes

      - name: Limit the max memory used to 2GB before pdflush is involved
        shell: echo 2147483648 > /proc/sys/vm/dirty_bytes

      - name: Set background kernel flusher for dirty bytes
        shell: echo 1073741824 > /proc/sys/vm/dirty_background_bytes

      - name: Increase the rate at which data is flushed to disk(Part 1)
        shell: echo 300 > /proc/sys/vm/dirty_expire_centisecs

      - name: Increase the rate at which data is flushed to disk(Part 2)
        shell: echo 100 > /proc/sys/vm/dirty_writeback_centisecs

      - name: Increase the size of file handles and inode cache
        shell: echo "2097152" > /proc/sys/fs/file-max

      - name: Force the file handles to survive a reboot(Part 1)
        shell: echo "" >> /etc/sysctl.conf
      - name: Force the file handles to survive a reboot (Part 2)
        shell: echo "#Set fs.file-max to 2097152" >> /etc/sysctl.conf 
      - name: Force the file handles to survue a reboot(Part 3)
        shell: echo "fs.file-max = 2097152" >> /etc/sysctl.conf

      - name: Disable NUMA zone reclaim algorithm. This tends to decrease read latencies
        shell: echo 0 > /proc/sys/vm/zone_reclaim_mode

      - name: Run the sysctl -p command to apply all changes from this playbook
        shell: sysctl -p

      - name: Set User Limits(Part 1)
        shell: echo "" >> /etc/security/limits.conf
      - name: Set User Limits (Part 2)
        shell: echo "#Set User Limits to increase available file descriptors for Couchbase and ensure core dumps can be created" >> /etc/security/limits.conf
      - name: Set User Limits(Part 3)
        shell: echo "couchbase soft nofile 131072" >> /etc/security/limits.conf
      - name: Set User Limits (Part 4)
        shell: echo "couchbase hard nofile 131072" >> /etc/security/limits.conf
      - name: Set User Limits (Part 5)
        shell: echo "couchbase hard core unlimited" >> /etc/security/limits.conf

      - name: Initially Configure Transpaent Huge Pages(THP)
        shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled
      - name: Configure Transparent Huge Pages(THP Part 2)
        shell: echo never > /sys/kernel/mm/transparent_hugepage/defrag
    

      - name: Backup /etc/rc.local before making any changes to the file
        shell: cp -p /etc/rc.local /etc/rc.local.bak



      - name: Configure THP to survivie reboots(part 1)
        shell: echo "" >> /etc/rc.local
      - name: Configure THP to survive reboots(part 2)
        shell: echo "#Set THP to execute at boot-time" >> /etc/rc.local
      - name: Configure THP to survive reboots(part 3)
        shell: echo "sudo echo never > /sys/kernel/mm/transparent_hugepage/enabled" >> /etc/rc.local
      - name: Configure THP to survive reboots (part 4)
        shell: echo "sudo echo never > /sys/kernel/mm/transparent_hugepage/defrag" >> /etc/rc.local

      - name: Configure Packet Steering for virtualized envionments
        shell: echo f > /sys/class/net/eth0/queues/rx-0/rps_cpus
      - name: Configure Packet Steering to survive reboots
        shell: echo "" >> /etc/rc.local
      - name: Configure Packet Steering for virtualized envionments(Part 2)
        shell: echo "#Set Packet Steering to execute at boot-time" >> /etc/rc.local
      - name: Configure Packet Steering for virtualized envionments(Part 3)
        shell: echo "sudo echo f > /sys/class/net/eth0/queues/rx-0/rps_cpus" >> /etc/rc.local
